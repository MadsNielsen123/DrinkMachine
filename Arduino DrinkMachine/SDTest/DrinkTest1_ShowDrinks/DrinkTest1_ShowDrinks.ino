/*
 * 1. Loads drink numbers (autogenerated) and names
 * 
 */

#include <SPI.h>
#include <SD.h>
File recipesFile;
const int chipSelect = 4;
char lastByteRead = ' ';
unsigned int drinkCounter = 0;
String lastDrinkInfo;

void setup() {

  //--------------------------------------------- Init ------------------------------------------------
  Serial.begin(9600);
  while (!Serial) {
    ; // wait for serial port to connect. Needed for native USB port only
  }
  
  Serial.print("Initializing SD card...");

  if (!SD.begin(chipSelect)) {
    Serial.println("initialization failed!");
    while (1);
  }
  Serial.println("initialization done.");

  // ------------------------------------------- Show all drinks -----------------------

  // open the file. note that only one file can be open at a time,
  // so you have to close this one before opening another.
  recipesFile = SD.open("DRINKS.TXT");
  if (recipesFile) 
  {
    Serial.println("Drinks available to select: ");

    // read from the file until there's nothing else in it:
    while (recipesFile.available()) 
    {    
      Serial.print(++drinkCounter);
      Serial.print(" ");
      while(lastByteRead != '\n' && recipesFile.available())//until end of line or no more data
      {
        lastByteRead = recipesFile.read();
        lastDrinkInfo += lastByteRead; //store drinkinfo into string      
      }      
        Serial.println(lastDrinkInfo.substring((lastDrinkInfo.indexOf('"')+1),(lastDrinkInfo.lastIndexOf('"'))));
        lastByteRead = recipesFile.read();
        lastDrinkInfo = ""; 
    }

    // close the file:
    recipesFile.close();
  } 
  else 
  {
  // if the file didn't open, print an error:
  Serial.println("error opening drink_recipes.txt");
  }
}

void loop() {
  // put your main code here, to run repeatedly:

}
